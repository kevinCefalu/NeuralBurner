{
  "type": "module",
  "name": "neuralburner",
  "version": "1.8.1",
  "keywords": [
    "bitburner",
    "game"
  ],
  "description": "My BitBurner application.",
  "author": "Kevin Cefalu",
  "license": "UNLICENSED",
  "homepage": "https://github.com/kevinCefalu/NeuralBurner#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kevinCefalu/NeuralBurner.git"
  },
  "bugs": {
    "url": "https://github.com/kevinCefalu/NeuralBurner/issues"
  },
  "dependencies": {
    "lodash": "^4.17.21",
    "ms": "^2.1.3",
    "numeral": "^2.0.6"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^25.0.0",
    "@rollup/plugin-node-resolve": "^15.0.2",
    "@types/lodash": "^4.14.178",
    "@types/ms": "^0.7.31",
    "@types/node": "^16.4.3",
    "@types/numeral": "^2.0.2",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "eslint": "^7.32.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-typescript-sort-keys": "^2.3.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.8.8",
    "prettier-plugin-package": "^1.3.0",
    "rollup": "^3.21.8",
    "rollup-plugin-clean": "^1.0.0",
    "rollup-plugin-commonjs": "^10.1.0",
    "rollup-plugin-node-resolve": "^5.2.0",
    "rollup-plugin-typescript": "^1.0.1",
    "ts-node": "^9.1.1",
    "tslib": "^2.5.0",
    "typescript": "^4.3.5"
  },
  "main": "dist/how-long-till-lunch.cjs.js",
  "module": "dist/how-long-till-lunch.esm.js",
  "browser": "dist/how-long-till-lunch.umd.js",
  "scripts": {
    "bitburner:updateDefinitions": "node ./scripts/updateDefinitions.js",
    "lint": "eslint . --ext .ts",
    "dist:remove": "rmdir /s /q dist",
    "dist:create": "mkdir dist",
    "clean": "npm-run-all dist:remove dist:create",
    "copyResources": "mkdir src/resources && cp -r src/resources/ dist/",
    "build:rollup": "rollup -c --bundleConfigAsCjs",
    "build:tsc": "npx tsc --project tsconfig.json",
    "build": "npm-run-all build:rollup",
    "watch:tsc": "npx tsc --watch",
    "watch:rollup": "rollup -c -w",
    "watch": "npm-run-all clean watch:rollup",
    "pretest": "npm run build",
    "test": "ts-node test/test.ts"
  },
  "files": [
    "dist"
  ]
}
